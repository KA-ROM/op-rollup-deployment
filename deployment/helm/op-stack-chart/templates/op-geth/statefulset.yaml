---
# Source: op-geth/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: op-geth
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: op-geth
    app.kubernetes.io/instance: op-geth
    app.kubernetes.io/version: "v1.10.26"
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: "op-stack-release"
    meta.helm.sh/release-namespace: "op-stack"
spec:
  serviceName: op-geth
  selector:
    matchLabels:
      app.kubernetes.io/name: op-geth
      app.kubernetes.io/instance: op-geth
      release: op-geth
  template:
    metadata:
      labels:
        app.kubernetes.io/name: op-geth
        app.kubernetes.io/instance: op-geth
        release: op-geth
    spec:
      initContainers:
      - name: preprocess
        command: ["/bin/sh", "-c"]
        args:
          - |
            rm -rf /root/data/geth/LOCK  # remove lock
            rm -rf /root/data/geth/nodekey  # remove nodekey
        image: busybox
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: data
          mountPath: /root
      - name: import-signer-key
        image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth:v1.101411.0"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
          - |
            geth init --state.scheme=hash --datadir=root/data genesis.json
            
            if [ -f "/root/init.import-signer-key.done" ]; then
            echo "already initialized"
            ls /root/data
            else
            echo "Signer key import start"
            wget https://storage.googleapis.com/op-geth-genesis-bucket/genesis.json -O genesis.json
            geth account import \
              --datadir=/root/data \
              --password=/secrets/datadir-secret.txt \
              /secrets/block-signer-key
            touch /root/init.import-signer-key.done
            ls /root/data
            echo "Signer Key import finished"
            fi
        volumeMounts:
        - name: data
          mountPath: /root
        - name: op-geth-secret
          mountPath: /secrets # mounts all files in the Secrets.
      - name: import-genesis
        command: ["/bin/sh", "-c"]
        args:
          - |
            if [ -f "/root/init.import-genesis.done" ]; then
            echo "already initialized"
            ls /root/data
            else
            echo "Chain import start"
            wget https://storage.googleapis.com/op-geth-genesis-bucket/genesis.json -O genesis.json
            geth init --state.scheme=hash --datadir=root/data genesis.json
            touch /root/init.import-genesis.done
            ls /root/data
            echo "Genesis import finished"
            fi
        image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth:v1.101411.0"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: data
          mountPath: /root
      containers:
        - name: op-geth
          image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth:v1.101411.0"
          imagePullPolicy: IfNotPresent
          ports:
            # HTTP RPC
            - name: rpc-http-port
              containerPort: 8545
            # WS RPC
            - name: rpc-ws-port
              containerPort: 8546
            # AuthRPC
            - name: authrpc-port
              containerPort: 8551
            # Metrics
            - name: metrics-port
              containerPort: 7300
            # pprof
            - name: pprof-port
              containerPort: 6060
          command: ["/usr/local/bin/geth"]
          args:
            - --datadir=/root/data
            - --syncmode=full
            - --gcmode=archive
            - --maxpeers=0
            - --rollup.disabletxpoolgossip=true
            - --password=/secrets/datadir-secret.txt
            - --allow-insecure-unlock
            - --unlock=0x2E0878db828ea485ec0926a52A504Bdd9D7E3Aae
            - --nodiscover
            # HTTP RPC
            - --http
            - --http.api=web3,debug,eth,txpool,net,engine
            - --http.addr=0.0.0.0
            - --http.vhosts=*
            - --http.port=8545
            - --http.corsdomain=*
            # WS RPC
            - --ws
            - --ws.addr=0.0.0.0
            - --ws.port=8546
            - --ws.api=debug,eth,txpool,net,engine
            - --ws.origins=*
            # network settings
            - --networkid=42069
            # Auth RPC
            - --authrpc.addr=0.0.0.0
            - --authrpc.port=8551
            - --authrpc.vhosts=*
            - --authrpc.jwtsecret=/secrets/jwt-secret.txt
            # pprof
            - --pprof
            - --pprof.addr=0.0.0.0
            - --pprof.port=6060
            # metrics
            - --metrics
            - --metrics.addr=0.0.0.0
            - --metrics.port=7300
            # Other Arguments
            - --state.scheme=hash
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 60
            tcpSocket:
              port: rpc-http-port
          readinessProbe:
            # TODO: replace it to real http request.
            initialDelaySeconds: 15
            periodSeconds: 60
            tcpSocket:
              port: rpc-http-port
          volumeMounts:
          - name: data
            mountPath: /root
          - mountPath: /secrets # mounts all files in the Secrets.
            name: op-geth-secret
          resources:
            limits:
              memory: 3Gi
            requests:
              memory: 3Gi
      volumes:
        - name: op-geth-secret
          secret:
            secretName: op-geth-secret
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        "helm.sh/resource-policy": keep
      labels:
        app.kubernetes.io/name: op-geth
        app.kubernetes.io/instance: op-geth
        release: op-geth
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 200Gi